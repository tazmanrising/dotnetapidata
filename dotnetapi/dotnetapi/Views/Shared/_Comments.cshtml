@model dotnetapi.Data.Models.tblComments

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*@model IEnumerable<dotnetapi.Data.Models.tblComments>


<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "createActor", title = "Create Actor" })
</p>
<table style="border: 1px solid black;" cellpadding="10">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.tblTipdId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.created)
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td valign="top">
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td valign="top">
                @Html.DisplayFor(modelItem => item.tblTipdId)
            </td>
            <td valign="top">
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td valign="top">
                @Html.DisplayFor(modelItem => item.created)
            </td>
        </tr>
    }
</table>*@